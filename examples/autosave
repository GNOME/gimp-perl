#!/usr/bin/perl -w

use strict;
use Gimp;
#BEGIN { $Gimp::verbose = 3; }
use Gimp::Fu;
use Gimp::Extension;
use Cwd 'abs_path';
use File::Path 'make_path';
use File::Basename;
use List::Util qw(min max);

my %C = (
  active => 1,
  interval => 5,
  saved_file_pattern => '%F~',
  new_file_pattern => '%~/.gimp-autosave/%N.%D.%B.%Wx%H'
);

sub expand_pattern {
  my ($img, $pattern, $file, $date) = @_;
  $pattern =~ s{%(?:(~)|(B)|(C)|(D)|(F)|(N)|(W)|(H)|%)}{
      $1 ? $ENV{HOME}
    : $2 ? qw(RGB GRAY INDEXED) [$img->base_type]
    : $3 ? dirname ($file)
    : $4 ? $date
    : $5 ? (index ($file, '.xcf') == (length ($file) - 4)
	     ? $file : "$file.xcf")
    : $6 ? $img->get_name
    : $7 ? $img->width
    : $8 ? $img->height
    : '%' }xeg;
  $pattern;
}

sub autosave_real {
  # warn "calling autosave_real";
  my $sfp = ($C{saved_file_pattern} || '%F~');
  my $nfp = ($C{new_file_pattern} || '%~/.gimp-autosave/%N.%D.%B.%Wx%H');
  for my $img (grep { $_->is_valid and $_->is_dirty } Gimp::Image->list) {
    my $saved=0;
    my $file;
    if (($file = $img->get_filename) && index ($file, 'Untitled') == -1) {
      $saved=1;
    } else {
      $file = ($img->get_name || $$img);
    }
    my @date = (localtime) [5,4,3];
    $date[0]+=1900; $date[1]+=1;
    my $date = join '', @date;
    my $fname;
    if ($saved) {
      $fname = expand_pattern($img, $sfp, $file, $date);
    } elsif ($img->get_filename) {
      $fname = $img->get_filename;
    } else {
      $fname = expand_pattern($img, $nfp, $file, $date);
      $fname =~ s/(?:\.xcf)?$/.xcf/;
      unless ($img->get_name =~ /Untitled-\d+/) {
	my $c = 0;
	my @fname = split '<<x>>', $fname, 2;
	my @fs = glob "$fname[0]*";
	$c++ while grep /$fname[0]$c\b/, @fs;
	$fname = "$fname[0]$c$fname[1]";
	$img->set_filename ($fname);
      }
    }
    my $savedir = dirname $fname;
    if (-e $savedir and not -d $savedir) {
      warn "'$savedir' exists, but isn't a directory, can't save\n";
    } elsif (not -d $savedir) {
      warn "couldn't make directory '$savedir'\n" unless make_path $savedir;
    }
    # warn "saving '$fname'";
    eval { ($img->get_layers)[0]->xcf_save($fname, $fname); };
    warn "couldn't save '$fname': $@\n" if $@;
  }
  1;
}

podregister_temp autosave_configure => sub {
  my ($tog, $int, $sfp, $nfp) = @_;
  # warn "got $tog, $int, $sfp, $nfp";
  $int = max(1, min(120, $int//1));
  Gimp->gimprc_set('autosave_active', $C{active} = $tog);
  Gimp->gimprc_set('autosave_interval', $C{interval} = $int);
  Gimp->gimprc_set('autosave_saved_file_pattern',$C{saved_file_pattern} = $sfp);
  Gimp->gimprc_set('autosave_new_file_pattern', $C{new_file_pattern} = $nfp);
  Glib::Source->remove(delete $C{t})
   if $C{t} && ($int != $C{interval} || !$tog);
  $C{t} = Glib::Timeout->add_seconds(60*$C{interval}, \&autosave_real)
   if $tog && !$C{t};
  1; # as has "image return"
};

podregister {
  for (keys %C) {
    my $x = eval { Gimp->gimprc_query("autosave_$_") };
    $C{$_} = $x if length $x;
  }
  $C{interval} = max(1, min(120, $C{interval}));
  Gimp->gimprc_set('autosave_interval', $C{interval});
  $C{t} = Glib::Timeout->add_seconds(60*$C{interval}, \&autosave_real)
    if $C{active};
  Gtk2->main;
};
exit main;
__END__

=head1 NAME

extension_autosave - Periodically save all open images to temporary files

=head1 SYNOPSIS

<None>

=head1 DESCRIPTION

Open images that haven't been saved to at all yet, will be saved in the
home directory, or the cwd, or a configurable directory, using the time
the image was started, and some random/distinguishing property.

=head1 TEMPORARY PROCEDURES

=head2 autosave_configure - Edit autosave settings

Update autosave settings. All files are saved as .xcf.

=head3 SYNOPSIS

<Image>/Edit/Autosave settings...

=head3 PARAMETERS

  [PF_TOGGLE, 'active', 'Set whether or not autosave is active', 1],
  [PF_SPINNER, 'interval', "Autosave interval in minutes", 5, [1, 120, 1]],
  [PF_STRING, 'saved_file_pattern', 'Path and filename pattern for saved files:
    You can use the special identifiers:
    %~ => user\'s home directory
    %B => image base type (RGB/GRAY/INDEXED)
    %C => current directory of the file *
    %D => date file was opened
    %F => filename (full path) *
    %N => filename (basename)
    %W => image width
    %H => image height
    * not available for unsaved files',
    '%F~'],
  [PF_STRING, 'new_file_pattern',
    'Path and filename pattern for new (unsaved) files',
    '%~/.gimp-autosave/%N.%D.%M.%Wx%H']

=head1 AUTHOR

Rain <rain AT terminaldeficit DOT com>

=head1 DATE

2014-05-08

=head1 LICENSE

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License along
with this program. If not, see <http://www.gnu.org/licenses/>.
