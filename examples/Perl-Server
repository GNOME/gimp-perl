#!/usr/bin/perl

use strict;
#BEGIN { $Gimp::verbose = 1; }
use Gimp qw(__ N_);
use Gimp::Net ();

N_"/Xtns/Perl"; # workaround for i18n weirdnesses

Gimp::set_trace(\$Gimp::Net::trace_res);
Gimp::ignore_functions(qw(gimp_progress_init gimp_progress_update));

Gimp::on_run \&Gimp::Net::perl_server_run;
Gimp::on_quit \&Gimp::Net::perl_server_quit;

Gimp::on_query {
   Gimp->install_procedure(
      $Gimp::Net::PERLSERVERPROC, "Gimp-Perl scripts net server",
      "Allow scripting GIMP with Perl providing Gimp::Net server",
      "Marc Lehmann <pcg\@goof.com>", "Marc Lehmann", "1999-12-02",
      N_"<Image>/Filters/Languages/_Perl/_Server", undef,
      $Gimp::Net::PERLSERVERTYPE,
      [
       [&Gimp::PDB_INT32, "run_mode", "Interactive, [non-interactive]"],
       [&Gimp::PDB_INT32, "flags", "internal flags (must be 0)"],
       [&Gimp::PDB_INT32, "extra", "multi-purpose"],
       [&Gimp::PDB_INT32, "verbose", "Gimp verbose var"],
      ],
      [],
   );
};

exit Gimp::main;
__END__

=head1 NAME

Perl-Server - enable Gimp-Perl scripts to access running GIMP instance
via Gimp::Net

=head1 SYNOPSIS

<Image>/Filters/Languages/Perl/Server

=head1 DESCRIPTION

If activated by the user, allows Gimp-Perl scripts to connect to the
running GIMP instance. Also provides a working example of a GIMP extension
in Gimp-Perl.

There is a security advisory about GIMP scripting servers. This program
will only allow TCP connections if a password is specified (the "auth"
option), thereby eliminating any network-related security risk.

=head1 SEE ALSO

L<Gimp::Net>
