#!/usr/bin/perl -w

use Gimp qw(:auto __ N_);
use Gimp::Fu;
use strict;
use warnings;

podregister {
  my $selection_flag = 0;
  $image->undo_group_start;
  $drawable->add_alpha unless $drawable->has_alpha;
  if ($image->selection_is_empty) {
    $image->selection_all;
    $selection_flag = 1;
  }
  Gimp::Context->push();
# Now the fun begins :)

  my $selection = $image->selection_save;

#1. Pixelize the photo
  $drawable->pixelize($blocksize);
# 2. in a new white layer, render a grid
#           at the same resolution as the pixelize, then blur it.
  my $gridlayer = $image->layer_new($image->width, $image->height, RGBA_IMAGE, "Grid 1", 100, 0);
  $image->insert_layer($gridlayer,0,0);
  $image->selection_all;
  gimp_edit_clear($gridlayer);
  Gimp::Context->set_background([255,255,255]);
  gimp_edit_fill($gridlayer, BACKGROUND_FILL);
  $gridlayer->grid(1, $blocksize, 0, [0,0,0], 255, 1, $blocksize, 0, [0,0,0], 255, 0, 0, 0, [0,0,0], 0);
  $gridlayer->gauss_iir(0.7*$blocksize, 1, 1);

#	threshold the
#   grid until you get a roundish blob in the center of each square (you
#   may need to repeat a few times).

  $gridlayer->levels(0, 196, 234, $knobfactor/100.0 , 0, 255);

# <Xach> sjburges: meanwhile, back at the pixelized image, bumpmap it with
#           itself and a depth of about 5. do this twice.
  $image->select_item(CHANNEL_OP_REPLACE, $selection);
  $drawable->bump_map($drawable, 135, 45, 5, 0, 0, 0, 0, 1, 0, 0);
  $drawable->bump_map($drawable, 135, 45, 5, 0, 0, 0, 0, 1, 0, 0);
  $drawable->bump_map($gridlayer, 135, 45, 5, 0, 0, 0, 0, 1, 0, 0);

# <Xach> then create a new, clean grid, and bumpmap the pixelized layer with it
  $image->selection_all;
  my $cleangrid = $image->layer_new($image->width, $image->height,
			   RGBA_IMAGE, "Grid 2", 100, 0);
  $image->insert_layer($cleangrid,0,0);
  gimp_edit_fill($cleangrid, BACKGROUND_FILL);
  $cleangrid->grid(1, $blocksize, 0, [0,0,0], 255, 1, $blocksize, 0, [0,0,0], 255, 0, 0, 0, [0,0,0], 0);
  $image->select_item(CHANNEL_OP_REPLACE, $selection);
  $drawable->bump_map($cleangrid, 135, 45, 3, 0, 0, 0, 0, 1, 0, 0);
  $image->selection_all;

# Clean up stuff

  $image->remove_layer($cleangrid);
  $image->remove_layer($gridlayer);
  $image->select_item(CHANNEL_OP_REPLACE, $selection);
  if ($selection_flag ==1) {
    $image->selection_none;
  }
  Gimp::Context->pop();
  $image->undo_group_end;
  return;
};

exit main;
__END__

=head1 NAME

xach_blocks - Xach's Blocks o' Fun

=head1 SYNOPSIS

<Image>/Filters/Map/Xach Blocks...

=head1 DESCRIPTION

Turn your picture into something that resembles a certain trademarked
building block creation.

=head1 PARAMETERS

  [PF_SLIDER, "blocksize", "The size of the blocks", 10, [2, 255, 1]],
  [PF_SLIDER, "knobfactor", "The size of your knob", 40, [10, 100, 5]],

=head1 IMAGE TYPES

*

=head1 HISTORY

This is (hopefully) a demonstration of how pathetically easy it is to script
a neato effect you've come up with.  This lil' effect was created by xach,
and translated by sjburges (me).  You can consider it released under the GPL
or Artistic liscence, whichever makes you happier.

 <Xach> sjburges: 1. pixelize the photo  2. in a new white layer, render a grid
           at the same resolution as the pixelize, then blur it. threshold the
           grid until you get a roundish blob in the center of each square (you
           may need to repeat a few times).
 <Xach> sjburges: meanwhile, back at the pixelized image, bumpmap it with
           itself and a depth of about 5. do this twice. then bumpmap it with
           the round blobby layer.
 <Xach> then create a new, clean grid, and bumpmap the pixelized layer with it

 (To get a decent blobby grid)
 <Xach> <Xach> render a grid at 10x10, gaussian blur at 7, then set levels to
           196 1.00 234

 Revision - 1.1:	added a gimp_displays_flush() for 1.0.x users
			stopped deleting the layers after removal - it was
                   causing bad things to happen with refcounts.  I hope
                   gimp is cleaning up this memory on its own...
            1.2:   Fixed buggy selection handling - oops ;)
            1.3:   Added undo capability by Marc Lehman <pcg@goof.com>
            1.4:   Marc Lehman <pcg@goof.com>, changed function name
            1.5:   Seth Burgess <sjburges@gimp.org> added my email, put it
                   in a directory more suitable than the lame "Misc"
            1.6:   Seth Burgess <sjburges@gimp.org> use Context

=head1 AUTHOR

Seth Burgess <sjburges@gimp.org>

=head1 DATE

2-15-98

=head1 LICENSE

Distributed under the same terms as Gimp-Perl.
